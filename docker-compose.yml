services:
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    networks:
      - spark-net
  postgres-metastore:
    image: postgres:15
    container_name: postgres-metastore
    environment:
      POSTGRES_DB: hive
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    ports:
      - "5433:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - spark-net
  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark_master
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_SQL_CATALOG_IMPLEMENTATION=hive
      - HADOOP_CONF_DIR=/opt/spark/conf
      - SPARK_HIVE_METASTORE_JDBC_URL=jdbc:postgresql://postgres-metastore:5432/hive
      - SPARK_HIVE_METASTORE_USERNAME=hive
      - SPARK_HIVE_METASTORE_PASSWORD=hive
    
    volumes:
      - ./jars/postgresql-42.6.0.jar:/opt/spark/jars/postgresql.jar
      - ./dimensions/:/dimensions
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark-net

  spark-worker-1:
    build:
      context: .
      dockerfile: Dockerfile.spark_worker1
    container_name: spark-worker-1
    hostname: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_SQL_CATALOG_IMPLEMENTATION=hive
      - HADOOP_CONF_DIR=/opt/spark/conf
      - SPARK_HIVE_METASTORE_JDBC_URL=jdbc:postgresql://postgres-metastore:5432/hive
      - SPARK_HIVE_METASTORE_USERNAME=hive
      - SPARK_HIVE_METASTORE_PASSWORD=hive
    volumes:
      - ./jars/postgresql-42.6.0.jar:/opt/spark/jars/postgresql.jar
      - ./dimensions/:/dimensions
    ports:
      - "8083:8081"
    networks:
      - spark-net

  spark-worker-2:
    build:
      context: .
      dockerfile: Dockerfile.spark_worker2
    container_name: spark-worker-2
    hostname: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_SQL_CATALOG_IMPLEMENTATION=hive
      - HADOOP_CONF_DIR=/opt/spark/conf
      - SPARK_HIVE_METASTORE_JDBC_URL=jdbc:postgresql://postgres-metastore:5432/hive
      - SPARK_HIVE_METASTORE_USERNAME=hive
      - SPARK_HIVE_METASTORE_PASSWORD=hive
    volumes:
      - ./jars/postgresql-42.6.0.jar:/opt/spark/jars/postgresql.jar
      - ./dimensions/:/dimensions
    ports:
      - "8082:8082"
    networks:
      - spark-net

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./dimensions/:/dimensions
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_MODE=client
    depends_on:
      - spark-master
    networks:
      - spark-net

  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5443:5432"
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    networks:
      - spark-net

  airflow-init:
    image: apache/airflow:2.8.0
    container_name: airflow-init
    depends_on:
      - airflow-postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
    command: airflow db init
    networks:
      - spark-net
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8081:8080" # Acessa a UI do Airflow na porta 8081 para n√£o conflitar com o Spark
    volumes:
      - ./dags:/opt/airflow/dags
      - ./pipelines:/opt/airflow/pipelines
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./notebooks:/opt/airflow/notebooks
      - ./dimensions/:/dimensions
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=uma_chave_secreta_super_segura_aqui
      - AIRFLOW__WWW_USER_CREATE=True
      - AIRFLOW__WWW_USER_USERNAME=admin
      - AIRFLOW__WWW_USER_PASSWORD=admin
      - AIRFLOW__WWW_USER_ROLE=Admin
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - PYTHONPATH=/opt/airflow
    command: airflow webserver
    networks:
      - spark-net

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./pipelines:/opt/airflow/pipelines
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./notebooks:/opt/airflow/notebooks
      - ./dimensions/:/dimensions
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - PYTHONPATH=/opt/airflow
    command: airflow scheduler
    networks:
      - spark-net

volumes:
  airflow_db_data:
networks:
  spark-net:
    name: ifood_spark-net
    driver: bridge